name: Update Dependencies

on:
  schedule:
    # Run every Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual triggering

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-update-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-update-

    - name: Install cargo-edit
      run: cargo install cargo-edit

    - name: Update dependencies
      run: |
        # Update Cargo.toml dependencies to latest compatible versions
        cargo update
        
        # Check if there are any changes
        if git diff --quiet Cargo.lock; then
          echo "No dependency updates available"
          echo "HAS_UPDATES=false" >> $GITHUB_ENV
        else
          echo "Dependencies updated"
          echo "HAS_UPDATES=true" >> $GITHUB_ENV
        fi

    - name: Run tests after update
      if: env.HAS_UPDATES == 'true'
      run: |
        cargo test --verbose
        cargo clippy --all-targets -- -D warnings

    - name: Generate update summary
      if: env.HAS_UPDATES == 'true'
      run: |
        echo "## Dependency Updates" > UPDATE_SUMMARY.md
        echo "" >> UPDATE_SUMMARY.md
        echo "The following dependencies have been updated:" >> UPDATE_SUMMARY.md
        echo "" >> UPDATE_SUMMARY.md
        
        # Show the changes in Cargo.lock
        git diff Cargo.lock | grep -E '^[\+\-]' | grep -E 'name|version' | head -20 >> UPDATE_SUMMARY.md || echo "Changes in Cargo.lock (truncated)" >> UPDATE_SUMMARY.md
        
        echo "" >> UPDATE_SUMMARY.md
        echo "All tests and linting checks have passed successfully." >> UPDATE_SUMMARY.md
        echo "" >> UPDATE_SUMMARY.md
        echo "This PR was automatically created by the dependency update workflow." >> UPDATE_SUMMARY.md

    - name: Create Pull Request
      if: env.HAS_UPDATES == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: update dependencies"
        title: "chore: Automated dependency updates"
        body-path: UPDATE_SUMMARY.md
        branch: automated-dependency-updates
        delete-branch: true
        labels: |
          dependencies
          automated
        reviewers: |
          ${{ github.repository_owner }}

  security-updates:
    name: Security Updates
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Check for security advisories
      run: |
        # Run audit and capture output
        if ! cargo audit --json > audit_report.json 2>&1; then
          echo "Security vulnerabilities found!"
          echo "SECURITY_ISSUES=true" >> $GITHUB_ENV
        else
          echo "No security vulnerabilities found"
          echo "SECURITY_ISSUES=false" >> $GITHUB_ENV
        fi

    - name: Create security issue
      if: env.SECURITY_ISSUES == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          let auditReport = '';
          try {
            auditReport = fs.readFileSync('audit_report.json', 'utf8');
          } catch (error) {
            auditReport = 'Could not read audit report';
          }
          
          const issueBody = `
          # ðŸ”’ Security Advisory Alert
          
          Cargo audit has detected security vulnerabilities in the project dependencies.
          
          ## Audit Report
          \`\`\`json
          ${auditReport}
          \`\`\`
          
          ## Recommended Actions
          1. Review the security advisories
          2. Update the affected dependencies
          3. Test the application thoroughly
          4. Consider using \`cargo audit fix\` for automatic fixes
          
          This issue was automatically created by the security update workflow.
          `;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'ðŸ”’ Security vulnerabilities detected in dependencies',
            body: issueBody,
            labels: ['security', 'dependencies', 'high-priority']
          });