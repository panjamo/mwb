# cargo-deny configuration file
# This file defines policies for dependency management, security, and licensing

[graph]
# If 1 or more target triples (and optionally, target_features) are specified,
# only the specified targets will be checked when running `cargo deny check`
targets = [
    "x86_64-unknown-linux-gnu",
    "x86_64-unknown-linux-musl", 
    "x86_64-pc-windows-msvc",
    "x86_64-apple-darwin",
    "aarch64-apple-darwin",
]

[advisories]
# The path where the advisory database is cloned/fetched into
db-path = "~/.cargo/advisory-db"
# The url(s) of the advisory databases to use
db-urls = ["https://github.com/rustsec/advisory-db"]
# The lint level for security vulnerabilities
vulnerability = "deny"
# The lint level for unmaintained crates
unmaintained = "warn"
# The lint level for crates that have been yanked from their source registry
yanked = "warn"
# The lint level for crates with security notices. Note that as of
# 2019-12-17 there are no security notice advisories in
# https://github.com/rustsec/advisory-db
notice = "warn"
# A list of advisory IDs to ignore. Note that ignored advisories will still
# output a note when they are encountered.
ignore = [
    #"RUSTSEC-0000-0000",
]

[licenses]
# The confidence threshold for detecting a license from a license text.
# 0.8 is a good default, but you may want to specify a higher value to be
# more conservative
confidence-threshold = 0.8
# List of explicitly allowed licenses
# See https://spdx.org/licenses/ for list of possible licenses
# [possible values: any SPDX 3.11 short identifier (+ optional exception)].
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
    "CC0-1.0",
]
# List of explicitly disallowed licenses
# See https://spdx.org/licenses/ for list of possible licenses
# [possible values: any SPDX 3.11 short identifier (+ optional exception)].
deny = [
    "GPL-2.0",
    "GPL-3.0",
    "AGPL-1.0",
    "AGPL-3.0",
    "LGPL-2.0",
    "LGPL-2.1",
    "LGPL-3.0",
    "CDDL-1.0",
    "CDDL-1.1",
    "EPL-1.0",
    "EPL-2.0",
]
# Lint level for when multiple versions of the same license are detected
multiple-versions = "warn"
# Confidence threshold for detecting a license from a license text.
# 0.8 is a good default, but you may want to specify a higher value to be
# more conservative
copyleft = "warn"
# Blanket approval or denial for OSI-approved or FSF Free/Libre licenses
# * both - The license will be approved if it is both OSI-approved AND FSF approved
# * either - The license will be approved if it is either OSI-approved OR FSF approved
# * osi-only - The license will be approved if is OSI-approved *but not* FSF approved
# * fsf-only - The license will be approved if is FSF-approved *but not* OSI approved
# * neither - The license will be approved if is it is *neither* OSI-approved *nor* FSF approved
allow-osi-fsf-free = "either"
# Lint level used when no license is detected for a crate, or when a license
# exception isn't allow-listed
default = "deny"

# List of crates to ignore license checks for
[[licenses.exceptions]]
# Each member of the 'allow' list must be a single SPDX ID
allow = ["Unicode-DFS-2016"]
# The name of the crate the exception applies to
name = "unicode-ident"

[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "warn"
# Lint level for when a crate version requirement is `*`
wildcards = "allow"
# The graph highlighting used when creating dotgraphs for crates
# with multiple versions
# * all - all edges are highlighted
# * first-and-last - only the first and last edges are highlighted
# * focus - only edges for the detected duplicates are highlighted
highlight = "all"
# List of crates that are allowed. Use with care!
allow = []
# List of crates to deny
deny = []
# Certain crates/versions that will be skipped when doing duplicate detection.
skip = []
# Similarly to `skip` allows you to skip certain crates from being checked. Unlike `skip`,
# `skip-tree` skips the crate and all of its dependencies entirely, so be careful!
skip-tree = []

[sources]
# Lint level for what to happen when a crate from a crate registry that is
# not in the allow list is encountered
unknown-registry = "warn"
# Lint level for what to happen when a crate from a git repository that is not
# in the allow list is encountered
unknown-git = "warn"
# List of allowed registries
allow-registry = ["https://github.com/rust-lang/crates.io-index"]
# List of allowed Git repositories
allow-git = []